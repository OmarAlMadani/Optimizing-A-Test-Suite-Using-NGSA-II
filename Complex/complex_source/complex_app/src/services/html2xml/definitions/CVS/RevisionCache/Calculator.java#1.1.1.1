
package services.html2xml.definitions;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * Calculator WebServices created by <a href=http://www.reflectionit.nl>Reflection IT</a>.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "Calculator", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://www.html2xml.nl/Services/Calculator/Version1/Calculator.asmx?WSDL")
public class Calculator
    extends Service
{

    private final static URL CALCULATOR_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(services.calculator.definitions.Calculator.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = services.calculator.definitions.Calculator.class.getResource(".");
            url = new URL(baseUrl, "http://www.html2xml.nl/Services/Calculator/Version1/Calculator.asmx?WSDL");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://www.html2xml.nl/Services/Calculator/Version1/Calculator.asmx?WSDL', retrying as a local file");
            logger.warning(e.getMessage());
        }
        CALCULATOR_WSDL_LOCATION = url;
    }

    public Calculator(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Calculator() {
        super(CALCULATOR_WSDL_LOCATION, new QName("http://tempuri.org/", "Calculator"));
    }

    /**
     * 
     * @return
     *     returns CalculatorSoap
     */
    @WebEndpoint(name = "CalculatorSoap")
    public CalculatorSoap getCalculatorSoap() {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorSoap"), CalculatorSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorSoap
     */
    @WebEndpoint(name = "CalculatorSoap")
    public CalculatorSoap getCalculatorSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorSoap"), CalculatorSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns CalculatorSoap
     */
    @WebEndpoint(name = "CalculatorSoap12")
    public CalculatorSoap getCalculatorSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorSoap12"), CalculatorSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorSoap
     */
    @WebEndpoint(name = "CalculatorSoap12")
    public CalculatorSoap getCalculatorSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorSoap12"), CalculatorSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns CalculatorHttpGet
     */
    @WebEndpoint(name = "CalculatorHttpGet")
    public CalculatorHttpGet getCalculatorHttpGet() {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorHttpGet"), CalculatorHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorHttpGet
     */
    @WebEndpoint(name = "CalculatorHttpGet")
    public CalculatorHttpGet getCalculatorHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorHttpGet"), CalculatorHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns CalculatorHttpPost
     */
    @WebEndpoint(name = "CalculatorHttpPost")
    public CalculatorHttpPost getCalculatorHttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorHttpPost"), CalculatorHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CalculatorHttpPost
     */
    @WebEndpoint(name = "CalculatorHttpPost")
    public CalculatorHttpPost getCalculatorHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "CalculatorHttpPost"), CalculatorHttpPost.class, features);
    }

}
